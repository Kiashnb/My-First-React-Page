{"version":3,"sources":["Tweet.js","App.js","reportWebVitals.js","index.js"],"names":["Tweet","props","className","name","message","likes","App","useState","users","map","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAaeA,MAVf,SAAeC,GACb,OACE,sBAAKC,UAAU,QAAf,UACE,6BAAKD,EAAME,OACX,4BAAIF,EAAMG,UACV,6BAAKH,EAAMI,YCuCFC,MA1Cf,WAEE,MAAwBC,oBAAS,GAAjC,mBACA,GADA,UAC0BA,mBAAS,IAAnC,mBAEA,GAFA,UAE0BA,mBAAS,CACjC,CAACJ,KAAM,MAAOC,QAAQ,cAAeC,MAAM,KAC3C,CAACF,KAAM,QAASC,QAAQ,QAASC,MAAM,KACvC,CAACF,KAAM,MAAOC,QAAQ,MAAOC,MAAM,QAHrC,mBAAOG,EAAP,KAiBA,OAjBA,KAkBE,qBAAKN,UAAU,MAAf,SAWGM,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAOP,KAAMO,EAAKP,KAAMC,QAASM,EAAKN,QAASC,MAAOK,EAAKL,cC5BpDM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.858c793d.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./App.css\"\r\n\r\nfunction Tweet(props) {\r\n  return (\r\n    <div className=\"tweet\">\r\n      <h3>{props.name}</h3>\r\n      <p>{props.message}</p>\r\n      <h3>{props.likes}</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tweet;","import React, { useState } from 'react';\nimport Tweet from './Tweet'\n\n\n\nfunction App() {\n\n  const [isRed, setRed] = useState(false);\n  const [count, setCount] = useState(0);\n\n  const [users, setUsers] = useState([\n    {name: 'Bob', message:'Hello world', likes:1000},\n    {name: 'Alice', message:'Hello', likes:500},\n    {name: 'Tom', message:'Hey', likes:2000},\n  ])\n\n\n  const increment = () => {\n    setCount(count + 1);\n    setRed(true)\n  }\n\n  const reset = () => {\n    setCount(0);\n    setRed(false);\n  }\n\n  return (\n    <div className=\"app\">\n      {/* <Tweet name=\"Kiash\" message=\"I am awesome\" likes=\"1000\"/>\n      <Tweet name=\"Dakota\" message=\"I am cool\" likes=\"10\"/>\n      <Tweet name=\"Delta\" message=\"I am amazing\" likes=\"123\"/>\n      <Tweet name=\"Echo\" message=\"I am random\" likes=\"456\"/>\n\n      <h1 className={isRed ? 'red' : ''}>Change colour</h1>\n      <button onClick={increment}>Increment</button>\n      <h1>{count}</h1>\n      <button onClick={reset}>Reset</button> */}\n\n      {users.map(user =>(\n        <Tweet name={user.name} message={user.message} likes={user.likes}/>\n      ))}\n    </div>\n  )\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}